% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/screen_csv.R
\name{screen_csv}
\alias{screen_csv}
\title{Run all checks against files}
\usage{
screen_csv(
  datapath,
  metapath,
  datafilename = NULL,
  metafilename = NULL,
  verbose = FALSE,
  stop_on_error = FALSE
)
}
\arguments{
\item{datapath}{Path to the data CSV file}

\item{metapath}{Path to the meta CSV file}

\item{datafilename}{Optional - the name of the data file, if not given it
will be assumed from the path}

\item{metafilename}{Optional - the name of the metadata file, if not given
it will be assumed from the path}

\item{verbose}{Logical, if TRUE prints feedback messages to console for
every test, if FALSE run silently}

\item{stop_on_error}{Logical, if TRUE will stop with an error if the result
is "FAIL", and will throw genuine warning if result is "WARNING"}
}
\value{
A list containing
\enumerate{
\item A table with the full results of the checks with four columns:
\itemize{
\item result of the check (PASS / FAIL / ADVISORY)
\item message giving feedback about the check
\item group that the check belongs to
\item name of the check
}
\item Overall stage the checks reached
\item Boolean indicating if the data passed the screening
\item Boolean indicating if the data is suitable for the API
}
}
\description{
Run all of the checks in the eesyscreener package against your data file and
associated metadata file. It takes in the paths to the CSV files then reads
and parses the files and runs the checks in multiple stages, the function
will return early if any check in a stage fails.
}
\examples{
# Create temp files for the example
data_path <- file.path(tempdir(), "example.csv")
meta_path <- file.path(tempdir(), "example.meta.csv")

write.csv(example_data, data_path, row.names = FALSE)
write.csv(example_meta, meta_path, row.names = FALSE)

screen_csv(data_path, meta_path)

screen_csv(
  data_path,
  meta_path,
  "data.csv",
  "data.meta.csv",
  verbose = TRUE
)

# Clean up temp files
invisible(file.remove(data_path))
invisible(file.remove(meta_path))
}
